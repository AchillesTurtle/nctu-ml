import numpy as np
from math import pi,sin,cos,log,sqrt
from random import random
from matplotlib import pyplot
from scipy import stats

def MulGaussianGen(mx=0,vx=1,my=0,vy=1,data_count=100):
    D1=[]
    D2=[]
    for n in range(data_count):
        D1.append(UniGaussianGen(mx,vx))
        D2.append(UniGaussianGen(my,vy))

    return D1,D2

def UniGaussianGen(m=0,s=1):
    #generated by Box-Muller
    #p value is a little high (~=0.5)
    return sqrt((-2)*log(random()))*cos(2*pi*random())*sqrt(s)+m

def PolyBasisGen(n,a,w):
    if(n!=len(w)):
        raise
    x=random()*20-10
    y=(sum(w[i]*(x**i) for i in range(n)))+UniGaussianGen(0,a)
    return (x,y)

if __name__=="__main__":
    MulGaussianGen()